---
title: "AtlasVPM: Atlas de Farmacia"
subtitle: "Variaciones en el consumo **Opioides** por Zona Básica de Salud"
lang: es
author:
  - name: "[Atlas de Variaciones injustificadas de la Práctica Médica (Atlas VPM)](https://cienciadedatosysalud.org/)"
    affiliations:
      - name: Grupo de Ciencia de datos para la investigación en servicios y políticas sanitarias
      - name: Instituto Aragonés de Ciencias de la Salud (IACS)
      - name: Instituto de Investigación Sanitaria de Aragón (IIS)
      - name: Red de Investigación en Cronicidad, Atención Primaria y Prevención y Promoción de la Salud (RICAPPS)
date: "2024-07-26"
# bibliography:
#   - referencias.bib
format: 
  html:
    embed-resources: true
    toc: true
    toc-depth: 4
    highlight-style: pygments
    code-fold: true
    html-math-method: katex
    grid:
      body-width: 1100px
include-in-header:
  - text: |
      <style>
      #title-block-header {
        background-image: url(logo_ciencia_atlas.png);
        background-size: 300px;
        background-position: top right;
        background-repeat: no-repeat;
        background-origin: content-box;
      }
      </style>
execute: 
  echo: false
  warning: false
  cache: false
---


```{css, echo = FALSE}
.justify {
  text-align: justify !important
}
```


```{r}
#| label: cargar paquetes

library(ggplot2)
library(dplyr)
# library(purrr)
library(Hmisc) 
# library(sjmisc)
library(DBI)
library(gt)
library(gtExtras)
library(logger)
library(epoxy)
library(cowplot)
library(plotly)
library(ggalluvial)
library(ggrepel)
library(scales)
library(tidyr)
library(treemapify)
library(ggridges)
library(tmap)
library(sf)
library(stringr)
options(scipen = 999)

#s <- Sys.getenv("PIPELINE_VERSION")
s <- '0.0.2'
log_info(paste0("Versión de los análisis: ",s))
```

<p> Versión de los análisis: `r paste0(s)` </p>



# Resumen ejecutivo


::: {.justify}


El número de envases de medicamentos opiáceos (opioides) dispensados en el periodo 2017-2022 aumentó un 24,5% (de 10,2 millones a 12,7 millones de dispensaciones). El 68,5% del total de  estas  dispensaciones se realizaron en mujeres. El porcentaje de mujeres con alguna dispensación de opioides respecto a los hombres fue considerablemente mayor en todos los grupos etarios, siendo más del doble a partir de los 65 años. Sin embargo, se observó un mayor crecimiento en las dispensaciones en hombres, 32,7% frente a un 20,8% en mujeres en el periodo de estudio. Las tarjetas sanitarias sin aseguramiento, farmacia gratuita y pensionistas y activos con rentas inferiores a 18000 euros (67,5% de la población en las CCAA analizadas) recibieron el 82,3% de los envases dispensados de fármacos opioides.


Con variación en la evolución anual y entre CCAA, en torno al 60% de los envases dispensados correspondieron a opioides en combinación con analgésicos, el 17% a otros opioides, el 14% a derivados de la fenilpiperidina, el 6% a alcaloides naturales del opio y el 2% a derivados de oripavina.


La mediana de consumo de los opioides estudiados para el conjunto de ZBS, aumentó ligeramente de 8,46 DHD en 2017 a 8,78 DHD en 2022. Este aumento se produjo fundamentalmente en los fármacos derivados de la fenilpiperidina, otros opioides y alcaloides naturales del opio mientras que el consumo de opioides en combinación con analgésicos y derivados de la oripavina descendió.


Para el conjunto de opioides analizados y años, la variación de DHD entre las ZBS de más y menos consumo, sin considerar las ZBS con valores extremos fue elevada, en torno a una razón de variación de 3,9 veces las DHD entre estas ZBS, siendo esta variación constante a lo largo de los años. Por subgrupos terapéuticos, esta  variación fue todavía mayor, siendo la más elevada la de opioides en combinación con analgésicos con una razón de variación de 28,5 entre las ZBS de más y menos consumo, derivados de oripavina con una razón de 14,4,  alcaloides naturales del opio con una razón de 10,8, derivados de la fenilpiperidina con una razón de 9,7 y finalmente otros opioides con una razón de 4,6.


Respecto a los indicadores del Plan de Optimización de la Utilización de Analgésicos Opioides en dolor crónico no oncológico en el Sistema Nacional de Salud, en los considerados opioides mayores, el número de envases dispensados entre 2017 y 2022 se incrementó más que proporcionalmente al conjunto de opioides dispensados en tapentadol y morfina, mientras que en fentanilo se mantuvo constante y descendió en oxicodona.

:::
# Contexto

::: {.justify}

Este informe pertenece a la serie de informes de AtlasVPM sobre Farmacia, en el que se incluyen el análisis de consumo de Opioides y de Antibióticos. 
En este informe nos referimos a consumo como la dispensación ambulatoria de un fármaco en oficina de farmacia a una persona con tarjeta sanitaria en el Sistema Nacional de Salud (SNS). 
El consumo de los medicamentos está mediado por la prescripción de un profesional sanitario -principalmente los médicos especialistas en medicina familiar y comunitaria-  y, en el caso de algunos medicamentos, al visado de la receta médica por un inspector del SNS.
La utilización de los medicamentos, como sucede con otras tecnologías sanitarias, está sujeta a una gran variabilidad. 
El análisis de las _variaciones en la práctica médica_, entendidas como las variaciones sistemáticas -no aleatorias- en las tasas estandarizadas de una exposición o intervención sanitaria (i.e., consumo de medicamento) al nivel que se produce la toma de decisiones sobre esta exposición o intervención sanitaria, en este caso, a nivel de Zona Básica de Salud (ZBS), es indispensable para identificar potenciales problemas de gestión sanitaria y ayudar a orientar la toma de decisiones sobre los servicios de salud. 
Las variaciones sistemáticas en los patrones de dispensación de medicamentos antibióticos y opioides suponen un desafío importante para todos los Sistemas de Salud. 

:::

::: {.callout-warning}
## Atención

Debe tenerse en cuenta que, cuando se habla de grupos mayores (N02AA, N02AB, N02AX, N02AJ, N02AE) o total (N02A) de Opioides en este estudio, estos ATC no incluyen todos los opioides sino sólo aquellos seleccionados como relevantes para estudio que aparecen en @sec-indicadores (para más información descargar el fichero ([Modelo de datos](https://github.com/cienciadedatosysalud/atlas-farmacia/blob/main/atlas_opioides/docs/CDM/common_datamodel.xlsx))

:::

# Resultados

```{r,warning=FALSE,output=FALSE,echo=FALSE}
#| label: crear query

database_path <- '../inputs/data.duckdb'

con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

envases_dispensados <- dbGetQuery(conn = con,
                  paste0("SELECT *FROM(SELECT 
                         año_cd,
                         mes_cd,
                         ccaa_cd,
                         grupo_edad_cd,
                         sexo_cd,
                         sum(pacientes_nm) as n_pacientes
                         FROM main.aggregated_outputs 
                         WHERE sexo_cd IN (1,2) and grupo_edad_cd IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18) 
                         GROUP BY 
                         año_cd,
                         mes_cd,
                         ccaa_cd,
                         sexo_cd,
                         grupo_edad_cd) WHERE año_cd >= 2017"))

pobla_tsi <- dbGetQuery(conn = con,
                  paste0("SELECT *FROM(SELECT 
                         año_cd,
                         ccaa_cd,
                         grupo_edad_cd,
                         sexo_cd,
                         sum(n_poblacion) as n_poblacion
                         FROM main.zona_basica_tarjeta 
                         WHERE sexo_cd IN (1,2) and grupo_edad_cd IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18) 
                         GROUP BY 
                         año_cd,
                         ccaa_cd,
                         sexo_cd,
                         grupo_edad_cd) WHERE año_cd::DOUBLE >= 2017"))

pobla_tsi <- pobla_tsi %>% filter(ccaa_cd %in% envases_dispensados$ccaa_cd)
pobla_tsi <- pobla_tsi %>% filter(año_cd %in% envases_dispensados$año_cd)
dbDisconnect(con, shutdown=TRUE)

```


```{r,output=FALSE}

df_participantes <- data.frame(ccaa_st = c('Aragón','Asturias','Baleares','Cantabria','Cataluña','Canarias','Castilla y León','Valencia','Madrid',
                                           'Navarra','País Vasco','La Rioja'),
                               ccaa_cd = c('ES24','ES12','ES53','ES13','ES51','ES70','ES41','ES52',
                                           'ES30','ES22','ES21','ES23'))
df_mes <- data.frame(mes_cd = c(1,2,3,4,5,6,7,8,9,10,11,12),
                     mes_st = c('Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'))

df_participantes_ <- df_participantes %>% filter(ccaa_cd %in% unique(pobla_tsi$ccaa_cd))

df_atc_farmaco_dispensado <- data.frame(atc = c('N02AA', 'N02AB', 'N02AX', 'N02AJ','N02AE'),
                                        color_atc = c("#66c2a5", "#fc8d62", '#a6d854','#e78ac3', "#8da0cb"),
                                        descr = c('Alcaloides naturales del opio', 
                                                  'Derivados de fenilpiperidina', 
                                                  'Otros opioides',
                                                  'Opioides en combinación con analgésicos no opioides',
                                                  'Derivados de oripavina'))


envases_dispensados_ <- envases_dispensados %>% group_by(año_cd,mes_cd) %>% summarise(n_pacientes = sum(n_pacientes,na.rm=TRUE))
envases_dispensados_ <- envases_dispensados_ %>% group_by(año_cd) %>% summarise(n_pacientes = mean(n_pacientes,na.rm=TRUE))
pobla_tsi_ <- pobla_tsi %>% group_by(año_cd) %>% summarise(n_poblacion = sum(n_poblacion,na.rm = TRUE))
pobla_tsi_ <- pobla_tsi_ %>% summarise(n_poblacion = mean(n_poblacion,na.rm = TRUE))
c <- round(100*((mean(envases_dispensados_$n_pacientes, na.rm = TRUE))/pobla_tsi_$n_poblacion),2)
rm(envases_dispensados_,pobla_tsi_)

# df <- data.frame()
# for(año in unique(pobla_tsi$año_cd)){
#   pobla_tsi_ <- pobla_tsi %>% filter(año_cd %in% año)
#   print(año)
#   lista_dfs <- list()
# 
# # Replicar el DataFrame para cada mes del año
# for (mes in 1:12) {
# df_temp <- pobla_tsi_
# df_temp$mes_cd <- mes
# lista_dfs[[mes]] <- df_temp
# }
# df_final <- do.call(rbind, lista_dfs)
# df <- rbind(df_final,df)
# }

```


```{epoxy}

En este estudio participan un total de {length(df_participantes_$ccaa_st)} comunidades autónomas, con una población global mayor de 14 años de {scales::label_comma()(sum(filter(pobla_tsi,año_cd %in% 2022)$n_poblacion, na.rm = TRUE))} en el año 2022, de la cual, la media mensual de personas distintas que han sido dispensadas de algún opioide (ATC = N02A) durante el periodo de estudio 2017 a 2022 es de un {c}%. 


```


```{r,warning=FALSE,output=FALSE,echo=FALSE}

con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

tabla_descriptiva <- dbGetQuery(conn = con,
                  paste0("SELECT *FROM(SELECT 
                         año_cd,
                         ccaa_cd,
                         sum(n_envases) as sum_n_envases
                         FROM (SELECT * FROM main.aggregated_outputs) WHERE grupo_edad_cd > 3
                         GROUP BY 
                         año_cd,
                         ccaa_cd) WHERE año_cd >= 2017"))
tabla_descriptiva_sexo <- dbGetQuery(conn = con,
                  paste0("SELECT *FROM(SELECT 
                         año_cd,
                         sexo_cd,
                         sum(n_envases) as sum_n_envases
                         FROM (SELECT * FROM main.aggregated_outputs) WHERE grupo_edad_cd > 3 
                         GROUP BY 
                         año_cd,
                         sexo_cd) WHERE año_cd >= 2017"))

tabla_descriptiva_tsi <- dbGetQuery(conn = con,
                  paste0("SELECT *FROM(SELECT 
                         año_cd,
                         tsi_cd,
                         sum(n_envases) as sum_n_envases
                         FROM (SELECT * FROM main.aggregated_outputs) WHERE grupo_edad_cd > 3 
                         GROUP BY 
                         año_cd,
                         tsi_cd) WHERE año_cd >= 2017"))

dbDisconnect(con, shutdown=TRUE)

total <- tabla_descriptiva %>% group_by(año_cd) %>% summarise(total = sum(sum_n_envases,na.rm=TRUE))
tabla_descriptiva <- tabla_descriptiva %>% group_by(año_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE)) %>% 
  ungroup() 
tabla_descriptiva <- tabla_descriptiva %>% group_by(año_cd,ccaa_cd) %>% summarise(value = paste0(sum_n_envases, ' (',round((100*sum_n_envases/total),2),'%)'))

tabla_descriptiva_ <- tabla_descriptiva %>% pivot_wider(names_from = año_cd,values_from = value)
tabla_descriptiva_ <- left_join(tabla_descriptiva_,df_participantes_,by='ccaa_cd')
tabla_descriptiva_ <- tabla_descriptiva_ %>% dplyr::select(!ccaa_cd) %>% rename(variable = ccaa_st)

tabla_descriptiva_sexo <- tabla_descriptiva_sexo %>% group_by(año_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE)) %>% 
  ungroup() 
tabla_descriptiva_sexo <- tabla_descriptiva_sexo %>% group_by(año_cd,sexo_cd) %>% summarise(value = paste0(sum_n_envases, ' (',round((100*sum_n_envases/total),2),'%)'))

tabla_descriptiva_sexo_ <- tabla_descriptiva_sexo %>% pivot_wider(names_from = año_cd,values_from = value)
tabla_descriptiva_sexo_$sexo_cd[tabla_descriptiva_sexo_$sexo_cd %in% '1'] <- 'Hombres'
tabla_descriptiva_sexo_$sexo_cd[tabla_descriptiva_sexo_$sexo_cd %in% '2'] <- 'Mujeres'
tabla_descriptiva_sexo_ <- tabla_descriptiva_sexo_ %>% rename(variable = sexo_cd)


tabla_descriptiva_tsi <- tabla_descriptiva_tsi %>% group_by(año_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE)) %>% 
  ungroup() 
tabla_descriptiva_tsi <- tabla_descriptiva_tsi %>% filter(tsi_cd %in% c('0','1','2','4'))

tabla_descriptiva_tsi_ <- tabla_descriptiva_tsi %>% group_by(año_cd,total) %>% summarise(value = sum(sum_n_envases,na.rm=TRUE))
tabla_descriptiva_tsi_ <- tabla_descriptiva_tsi_ %>% group_by(año_cd) %>% summarise(value = paste0(value, ' (',round((100*value/total),2),'%)'))


tabla_descriptiva_tsi_ <- tabla_descriptiva_tsi_ %>% pivot_wider(names_from = año_cd,values_from = value)
tabla_descriptiva_tsi_$variable <- 'Conjunto categorías TSI (0+1+2+4)'
rm(tabla_descriptiva,tabla_descriptiva_sexo,tabla_descriptiva_tsi)
```


::: {.callout-tip}
## Descripción tabla

La siguiente tabla muestra el número de envases totales por año, la aportación al mismo por cada comunidad autónoma, sexo y para el conjunto específico de categorías TSI (0,1,2, y 4).

:::


```{r,warning=FALSE,echo=FALSE}
total$variable <- 'Nº envases'
total <- total %>% pivot_wider(names_from = año_cd,values_from = total)

tabla <- rbind(tabla_descriptiva_,tabla_descriptiva_sexo_,tabla_descriptiva_tsi_,total)
rm(total)
tabla %>% gt(rowname_col = "variable") %>% 
  tab_row_group(
    label = "Conjunto categorías TSI (0+1+2+4)",
    rows = which(tabla$variable %in% c('Conjunto categorías TSI (0+1+2+4)')),
    id='tsi') %>% 
      tab_row_group(
    label = "Sexo",
    rows = which(tabla$variable %in% c('Hombres','Mujeres')),
    id='sexo'
  ) %>% 
    tab_row_group(
    label = "CCAA",
    rows = which(tabla$variable %in% c('Aragón','Asturias','Baleares',
                                       'Cantabria','Cataluña','Canarias',
                                       'Castilla y León','Valencia','Madrid',
                                       'Navarra','País Vasco','La Rioja')),
    id='ccaa') %>% 
      tab_row_group(
    label = "Total Nº envases anual",
    rows = which(tabla$variable %in% c('Nº envases')),
    id='total') %>% 
    tab_style(
    style = cell_fill(color = "gray85"),
    locations = cells_row_groups())  %>% 
   tab_header(
    title = md("Tabla descriptiva anual: Nº envases (%)"),
    subtitle = md("Opioides (N02A)")
  )
rm(tabla,tabla_descriptiva_,tabla_descriptiva_sexo_,tabla_descriptiva_tsi_)
```



## Porcentaje de envases dispensados por subgrupo terapéutico 


```{r,warning=FALSE,output=FALSE,echo=FALSE}
con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

tabla_envases_año <- dbGetQuery(conn=con,
                  "SELECT * FROM(
SELECT
	año_cd,
	ccaa_cd,
	atc_farmaco_dispensado_short,
	sum(pacientes_nm) as n_pacientes,
	sum(n_envases) as n_envases
from
	(
	select
		año_cd,
		ccaa_cd,
		atc_farmaco_dispensado[1:5] as atc_farmaco_dispensado_short,
		pacientes_nm,
		n_envases
	from
		main.aggregated_outputs
	WHERE
		(atc_farmaco_dispensado_short in ('N02AA', 'N02AB', 'N02AX', 'N02AJ','N02AE')))
GROUP BY
	año_cd,
	ccaa_cd,
	atc_farmaco_dispensado_short) WHERE año_cd >= 2017
")

dbDisconnect(con, shutdown=TRUE)


tabla_envases_año$atc_farmaco_dispensado_short <- factor(tabla_envases_año$atc_farmaco_dispensado_short)
df_ <- tabla_envases_año %>% group_by(atc_farmaco_dispensado_short) %>% 
  summarise(n_envases = sum(n_envases,na.rm=TRUE))

df_$total <- sum(df_$n_envases)
  
df_ <- df_ %>% mutate(percent_envases = round(100*(n_envases/total),2))

df_ <- left_join(df_,df_atc_farmaco_dispensado,by=c('atc_farmaco_dispensado_short'='atc'))
df_$descr[df_$descr %in% 'Derivados de oripavina'] <- 'Derivados de \noripavina'
plot <- ggplot(data=df_,aes(area = percent_envases, fill = color_atc,label = paste(descr, paste0(percent_envases,'%'), sep = "\n"))) +
  geom_treemap() +
  geom_treemap_text(place = "centre",
                    size=10) +
  labs(title='Porcentaje de envases dispensados por subgrupo terapéutico (2017-2022)')+
  scale_fill_identity() +
  theme(legend.position = "none",
        plot.title.position = 'plot')
  

rm(df_)
```


::: {.callout-tip}
## Descripción figura

Para el total de envases dispensados (suma de todas las comunidades autónomas participantes) en toda la serie temporal, se muestra el porcentaje de envases por cada subgrupo terapéutico. 
:::

```{r,warning=FALSE,echo=FALSE,fig.width=9, fig.height=6}
#| label: treemap
#| fig-align: center
plot
```




## Evolución temporal del porcentaje de envases dispensados por subgrupo terapéutico 

```{r,warning=FALSE,output=FALSE,echo=FALSE}


df_ <- tabla_envases_año %>% group_by(año_cd,ccaa_cd) %>% 
  mutate(total =(sum(n_envases,na.rm=TRUE))) 
df_ <- df_ %>% mutate(percent_envases = round(100*(n_envases/total),2))
df_ <- df_[order(df_$año_cd,df_$percent_envases, df_$atc_farmaco_dispensado_short),]

df_ <- left_join(df_,df_participantes_,by='ccaa_cd')
df_ <- left_join(df_,df_atc_farmaco_dispensado,by=c('atc_farmaco_dispensado_short'='atc'))
plot <- ggplot(df_,
       aes(x = factor(año_cd), stratum = atc_farmaco_dispensado_short, alluvium = atc_farmaco_dispensado_short,
           y = percent_envases,
           fill = color_atc)) +
  scale_fill_identity() +
  geom_flow(stat = "alluvium", lode.guidance = "frontback",
            color = "darkgray", width = 0.6) +
  geom_stratum(alpha = .9,width = 0.6, linewidth = 0.1, color = NA)  + 
  theme_minimal() +
    geom_text(stat = "stratum", aes(label = paste0(percent_envases,'%')), size=2.7)+ 
      labs(title = 'Evolución temporal del porcentaje de envases dispensados por ATC',
       y = 'Porcentaje de envases dispensados',
       x = 'Año') + facet_wrap(~ccaa_st,ncol = 3)+
  guides(fill=guide_legend(title="ATC fármaco")) + theme(plot.title.position = 'plot')
rm(df_)
```


::: {.callout-tip}
## Descripción figura

Para el total de envases dispensados en toda la serie temporal en cada comunidad autónoma, se muestra el porcentaje de envases por cada subgrupo terapéutico. 
:::

::: {.column-margin}

<span style="color:black;">La leyenda es, de acuerdo con la figura anterior,:</span> 

  - <span style="color:#66c2a5;">Alcaloides naturales del opio (N02AA)</span>,
  
  - <span style="color:#fc8d62;">Derivados de fenilpiperidina (N02AB)</span>,
  
  - <span style="color:#8da0cb;">Derivados de oripavina (N02AE)</span>,
  
  - <span style="color:#e78ac3;">Opioides en combinación con analgésicos no opioides (N02AJ)</span>,
  
  - <span style="color:#a6d854;">Otros opioides (N02AX)</span>,

:::

```{r,warning=FALSE,echo=FALSE,fig.width=11, fig.height=9}
#| label: ev_temp_alluvial
plot
```




## Distribución de la población con alguna dispensación de opioides (_N02A_) por grupo de edad y sexo


```{r,warning=FALSE,output=FALSE,echo=FALSE}


con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

df_piramide <- dbGetQuery(conn = con, "
SELECT * FROM(SELECT
  año_cd,
  ccaa_cd,
  sexo_cd,
  grupo_edad_cd,
  sum(n_envases) as sum_n_envases,
  sum(pacientes_nm) as sum_n_personas
FROM 
 main.aggregated_outputs
GROUP BY
  año_cd,
  ccaa_cd,
  sexo_cd,
  grupo_edad_cd) WHERE año_cd >= 2017 and grupo_edad_cd IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18) and sexo_cd IN (1,2)
	")


dbDisconnect(con, shutdown=TRUE)


```



```{r,warning=FALSE,output=FALSE,echo=FALSE}

df_agecat <- data.frame(grupo_edad_cd = c(4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
                        grupo_edad_st = c('15-19 años', '20-24 años','25-29 años','30-34 años', '35-39 años','40-44 años','45-49 años','50-54 años','55-59 años','60-64 años','65-69 años','70-74 años','75-79 años','80-84 años','85 años o más'))

df_piramide_ <- df_piramide

df_piramide_$sexo_cd <- factor(df_piramide_$sexo_cd, labels = c("Hombres","Mujeres"))
df_piramide_ <- df_piramide_[order(df_piramide_$grupo_edad_cd),]
df_piramide_ <- df_piramide_ %>% group_by(ccaa_cd,sexo_cd,grupo_edad_cd) %>% 
  summarise(sum_n_personas = sum(sum_n_personas,na.rm=TRUE),
            sum_n_envases = sum(sum_n_envases,na.rm=TRUE))
df_piramide_ <- df_piramide_ %>% group_by(ccaa_cd) %>% mutate(total_pobla = sum(sum(sum_n_personas,na.rm=TRUE)))
df_piramide_ <- df_piramide_ %>% mutate(percent = round(100*(sum_n_personas/total_pobla),1)) %>% 
  ungroup()
df_piramide_ <- left_join(df_piramide_,df_participantes_,by='ccaa_cd')


nudge_fun <- function(df){
  ifelse(df$sexo_cd == "Hombres", (sd(df$percent)/3)-2.5, sd(df$percent)/3+0.5)
}
df_piramide_ <- left_join(df_piramide_, df_agecat, by = 'grupo_edad_cd')
df_piramide_$grupo_edad_st <- as.factor(df_piramide_$grupo_edad_st)
df_piramide_$ccaa_st[df_piramide_$ccaa_st %in% 'Castilla y León'] <- 'Castilla y \nLeón'
plot <- df_piramide_ %>% 
  # First, we transforms the columns so that female values show in the
  # left-hand side of the plot, in this case as 'negative values'.
  # I also round some values for convenience.
  mutate(
    sum_n_personas = ifelse(sexo_cd=="Hombres", sum_n_personas*(-1), sum_n_personas*1), 
    percent = ifelse(sexo_cd=="Hombres", percent*(-1), percent*1), 
    share = paste0(abs(round(percent,1)), "%")
  ) %>% 
  ggplot(aes(x = percent, y=grupo_edad_st, label = share,group=ccaa_st)) +
  geom_col(aes(fill=sexo_cd)) +
  geom_text(aes(label = share),
            position = position_nudge(x = nudge_fun(df_piramide_)),
            size = 3
  ) +
  scale_fill_manual(name = "Sexo", values=c("#5983b0","#e8a202")) +
  labs(title = paste0("Pirámide de edad y sexo de personas con alguna dispensación (2017-2022)"),
       x = "", y = "") +
    scale_x_continuous(
    "", breaks = scales::pretty_breaks(n = 6),
    # Small function to rescale y axis
    labels =  function(br) abs(br)
  ) + facet_wrap(~ccaa_st,ncol=3,strip.position = 'left')+theme_void() +
      theme(plot.title.position = 'plot',axis.text = element_text(size = 10), legend.position = "bottom", legend.justification = "center",legend.text = element_text(size = 10),
        axis.ticks = element_blank())

#rm(df_piramide)
```

::: {.callout-tip}
## Descripción figura

Se muestra la distribución de la población con dispensaciones por grupo quinquenal de edad y sexo en toda la serie temporal.

Para la comunidad autónoma de Baleares la serie temporal es de 2020 a 2022. 

Para el resto de comunidades es 2017-2022.
:::


```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=9.5}
#| label: Pirámide

plot
```



## Porcentaje de población con alguna dispensación de opioides (_N02A_) en cada mes para el conjunto de la serie temporal y por sexo


```{r,warning=FALSE,output=FALSE,echo=FALSE}


con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

df_piramide <- dbGetQuery(conn = con, "
SELECT * FROM(SELECT
  año_cd,
  mes_cd,
  ccaa_cd,
  sexo_cd,
  sum(n_envases) as sum_n_envases,
  sum(pacientes_nm) as sum_n_personas
FROM 
 (SELECT * FROM main.aggregated_outputs) WHERE grupo_edad_cd > 3
GROUP BY
  año_cd,
  mes_cd,
  ccaa_cd,
  sexo_cd) WHERE año_cd >= 2017 and sexo_cd IN (1,2)
	")

pobla_tsi <- dbGetQuery(conn = con,
                  paste0("SELECT 
                         año_cd,
                         ccaa_cd,
                         sexo_cd,
                         sum(n_poblacion) as n_poblacion
                         FROM main.zona_basica_tarjeta 
                         WHERE sexo_cd IN (1,2) and grupo_edad_cd IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)
                         GROUP BY 
                         año_cd,
                         ccaa_cd,
                         sexo_cd")
)
pobla_tsi <- pobla_tsi %>% filter(año_cd %in% df_piramide$año_cd)

dbDisconnect(con, shutdown=TRUE)

df <- data.frame()
for(año in unique(pobla_tsi$año_cd)){
  pobla_tsi_ <- pobla_tsi %>% filter(año_cd %in% año)
#  print(año)
  lista_dfs <- list()

# Replicar el DataFrame para cada mes del año
for (mes in 1:12) {
df_temp <- pobla_tsi_
df_temp$mes_cd <- mes
lista_dfs[[mes]] <- df_temp
}
df_final <- do.call(rbind, lista_dfs)
df <- rbind(df_final,df)
}
pobla_tsi <- df
rm(df,df_final)

```





```{r,warning=FALSE,echo=FALSE}
#| label: porcentaje


# pobla_tsi_ <- pobla_tsi %>% rename(quinquenio = grupo_edad_cd)


# #grupos <- unique(df_piramide_$grupo_edad_cd)
# df_agecat <- data.frame(quinquenio = c(4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#                         grupo_edad_cd = c('15-19 años', '20-24 años','25-29 años','30-34 años', '35-39 años','40-44 años','45-49 años','50-54 años','55-59 años','60-64 años','65-69 años','70-74 años','75-79 años','80-84 años','85 años o más'))
# pobla_tsi_ <- left_join(pobla_tsi_, df_agecat, by = 'quinquenio')

#df_piramide_ <- df_piramide %>% rename(quinquenio = grupo_edad_cd)

# df_piramide_ <- left_join(df_piramide_, pobla_tsi_[c('año_cd','mes_cd','sexo_cd','grupo_edad_cd','n_poblacion','quinquenio','ccaa_cd')], by = c('año_cd','mes_cd','sexo_cd','quinquenio','ccaa_cd'))


pobla_tsi_ <- pobla_tsi
pobla_tsi_$año_cd <- as.numeric(pobla_tsi_$año_cd)
df_piramide_ <- df_piramide
df_piramide_ <- left_join(df_piramide_, pobla_tsi_[c('año_cd','mes_cd','sexo_cd','n_poblacion','ccaa_cd')], by = c('año_cd','mes_cd','sexo_cd','ccaa_cd'))


df_piramide_ <- df_piramide_ %>% mutate(percent = round(((sum_n_personas/n_poblacion)*100),2))



df_piramide_ <- df_piramide_ %>% group_by(sexo_cd,ccaa_cd,mes_cd) %>% summarise(percent_mean = round(mean(percent,na.rm=TRUE),2))
df_piramide_ <- left_join(df_piramide_,df_participantes_,by='ccaa_cd')
df_piramide_ <- left_join(df_piramide_,df_mes,by='mes_cd')
df_piramide_$sexo_cd <- factor(df_piramide_$sexo_cd, labels = c("Hombres","Mujeres"))
# p <- df_piramide_ %>%  ggplot(aes(x = reorder(factor(mes_st),mes_cd), y=percent_mean,fill=factor(sexo_cd))) +
#     geom_bar(width = 0.9,stat="identity",             
#               position = position_dodge()              
#            )+
#   geom_text(aes(label = paste0(abs(round(percent_mean,1)), "%")),
#             size = 3.0
#   ) +
#   labs(title = paste0("Porcentaje de población por sexo de personas dispensadas al mes (media mensual 2017-2022)"),
#        x = "", y = "") + facet_wrap(~ccaa_st) +
#   scale_fill_manual(name = "Sexo", values=c("#5983b0","#e8a202")) +
#       theme(title = element_text(size = 12), panel.background = element_blank(),axis.line = element_blank(),axis.title = element_text(size = 12),
#         axis.text = element_text(size = 10), 
#         axis.text.x = element_text(angle = 90),
#         legend.position = "bottom", legend.justification = "center",legend.text = element_text(size = 12),
#         axis.ticks = element_blank(),strip.background =element_rect(fill="white")) 

nudge_fun <- function(df){
  ifelse(df$sexo_cd == "Hombres", (sd(df$percent_mean)/3)*-1.5, sd(df$percent_mean)/3+1.5)
}

plot <- df_piramide_ %>%
  # First, we transforms the columns so that female values show in the
  # left-hand side of the plot, in this case as 'negative values'.
  # I also round some values for convenience.
  mutate(percent_mean = ifelse(sexo_cd=="Hombres", percent_mean*(-1), percent_mean*1), 
    share = paste0(abs(round(percent_mean,1)), "%")
  ) %>% 
  ggplot(aes(x = percent_mean, y=reorder(factor(mes_st),mes_cd), label = share)) +
  geom_col(aes(fill=factor(sexo_cd))) +
  geom_text(aes(label = share),
            position = position_nudge(x = nudge_fun(df_piramide_)),
            size = 2.5
  ) +
  scale_fill_manual(name = "Sexo", values=c("#5983b0","#e8a202")) +
  labs(title = paste0("Porcentaje de población por sexo de personas con alguna dispensación al mes (2017-2022)"),
       x = "", y = "")+ facet_wrap(~ccaa_st,ncol = 3) + 
  scale_x_continuous(
    "", breaks = scales::pretty_breaks(n = 6),
    # Small function to rescale y axis
    labels =  function(br) abs(br)
  ) +
  coord_flip() +
      theme(title = element_text(size = 12), plot.title.position = 'plot',
            panel.background = element_blank(),axis.line = element_blank(),axis.title = element_text(size = 12),
        axis.text = element_text(size = 10), 
        axis.text.x = element_text(angle = 90),
        axis.text.y = element_blank(),
        legend.position = "bottom", legend.justification = "center",legend.text = element_text(size = 12),
        axis.ticks = element_blank(),strip.background =element_rect(fill="white")) 

```

::: {.callout-tip}
## Descripción figura

Se muestra la distribución de la población con dispensaciones por sexo y mes en toda la serie temporal. Se construye calculando el porcentaje de personas con alguna dispensación por sexo para cada mes de cada año y luego realizando la media de cada mes a lo largo de la serie temporal.

Para la comunidad autónoma de Baleares la serie temporal es de 2020 a 2022. 

Para el resto de comunidades es 2017-2022.
:::

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Pirámide_mes

plot
```



## Evolución de la variación de consumo por ZBS (SNS)

<!-- VIOLIN PLOT POR AÑO (EJE Y)
IDEAS: 
- VIOLINES GREY70
- AÑADIR MEDIANA GENERAL (FIREBRICK DASHED) ANOTADA
- AÑADIR MEDIANA AÑO (BLACK DASHED)
- AÑADIR ALPHA 0.3 A LOS PUNTOS
- USAR UN THEME_VOID() o quitar todo lo que no sea necesario
--> 


```{r,warning=FALSE,output=FALSE,echo=FALSE}

con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

df_dhd_pvp <- dbGetQuery(conn = con, "
SELECT * FROM(SELECT
	a.*,
	b.ccaa_cd
FROM 
	main.std_dhd_pvp_values a
LEFT JOIN (SELECT
DISTINCT codatzbs,
ccaa_cd,
FROM main.zbs_residencia_codatzbs b) b
ON
	a.codatzbs = b.codatzbs) WHERE year >= 2017
	")

dbDisconnect(con, shutdown=TRUE)

```



```{r,warning=FALSE,output=FALSE,echo=FALSE}


list_variables <- 'dhd'
df_list_indicators <- data.frame(indicators = c('N02A','N02AA', 'N02AB', 'N02AX', 'N02AJ','N02AE'),
                                 descr = c('Opioides','Alcaloides naturales del opio', 
                                                  'Derivados de fenilpiperidina', 
                                                  'Otros opioides',
                                                  'Opioides en combinación con analgésicos no opioides',
                                                  'Derivados de oripavina'),
                                 limite_eje = c(30,5,15,10,10,5))

df_names_var_te <- data.frame(variable = c('dhd'),
                              title = c('Consumo (DHD) mg'))
  
p <- list()
plot_te_violin <- function(var){
  
  #names_files <- list.files(path="../../outputs", pattern = pattern, full.names=TRUE)
 #for(file in names_files){
  for(ind in df_list_indicators$indicators){
    data <- df_dhd_pvp
    data_filter <- data %>% filter(variable %in% var, indicator %in% ind)
    df_names_var_te_ <- df_names_var_te %>% filter(variable %in% var)
    df_list_indicators_ <- df_list_indicators %>% filter(indicators %in% ind)
    data_filter <- left_join(data_filter,df_participantes_, by = 'ccaa_cd')
    medians <- data_filter %>% group_by(year) %>% summarise(median_year = median(std_value,na.rm=TRUE))
    
    plot <- ggplot(data=data_filter, aes(x=year, y=std_value, group = year)) +
      geom_violin(trim = FALSE, color = 'gray70') + 
      stat_summary(fun = "median",
               geom = "crossbar", 
               linewidth = 0.1,
               colour = "black",
               linetype=2) +
      geom_text_repel(data=medians,aes(x=year,y=median_year,label=paste0('P50=',round(median_year,2))),nudge_y=0.5) +
      geom_jitter(position=position_jitter(0.25), size=0.3, alpha = 0.1) +
      labs(title = paste0(df_names_var_te_$title),
           subtitle = paste0(df_list_indicators_$descr, ' (',df_list_indicators_$indicators,')'),
           y = df_names_var_te_$title,
           x='') +
      ylim(c(0,df_list_indicators_$limite_eje)) +
      theme_minimal_hgrid() + scale_x_continuous(breaks = c(2017,2018,2019,2020,2021,2022))+
      geom_hline(data=data_filter, mapping=aes(yintercept=median(std_value,na.rm = TRUE)), color="firebrick",linetype=2) +
      geom_text(x=max(data_filter$year)+0.4,
                y=df_list_indicators_$limite_eje-1, 
                label=paste0('| P50 global: ',round(median(data_filter$std_value,na.rm = TRUE),2)), 
                color = 'firebrick', size=4) + 
      coord_flip() + theme(plot.title.position = 'plot')
    p[[ind]] <- plot
  }
  return(p)
}


plot_te <- lapply(list_variables, plot_te_violin)

```

::: {.callout-tip}
## Descripción figura

Se muestra la variación (mediante violines) del consumo (DHD) en las zonas básicas de salud que componen el sistema nacional de salud de manera que cada punto es una zona básica. Las líneas discontinuas negras son la mediana (P50) anual y la línea discontinua roja (P50 global) es la mediana de toda la serie temporal.
:::

::: {.panel-tabset} 
### Opioides (N02A)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo_DHD_Total
plot_te[[1]]$N02A


```


### Alcaloides naturales del opio (N02AA)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDAlcaloidesnaturalesdelopio
plot_te[[1]]$N02AA


```

### Derivados de fenilpiperidina (N02AB)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDDerivadosdefenilpiperidina
plot_te[[1]]$N02AB
```

### Otros opioides (N02AX)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDOtrosopioides
plot_te[[1]]$N02AX
```

### Opioides en combinación con analgésicos no opioides (N02AJ)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDOpioidesencombinaciónconanalgésicosnoopioides
plot_te[[1]]$N02AJ
```

### Derivados de oripavina (N02AE)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDDerivadosdeoripavina
plot_te[[1]]$N02AE
```


:::

## Evolución de la variación de consumo (DHD) por ZBS y por CCAA 


```{r,warning=FALSE,output=FALSE,echo=FALSE}

  
p <- list()
plot_te_violin_ccaa <- function(var){
  
  #names_files <- list.files(path="../../outputs", pattern = pattern, full.names=TRUE)
 #for(file in names_files){
  for(ind in df_list_indicators$indicators){
    data <- df_dhd_pvp
    data_filter <- data %>% filter(variable %in% var, indicator %in% ind)
    df_names_var_te_ <- df_names_var_te %>% filter(variable %in% var)
    df_list_indicators_ <- df_list_indicators %>% filter(indicators %in% ind)
    data_filter <- left_join(data_filter,df_participantes_, by = 'ccaa_cd')
    
    
    
    data_filter_ <- data_filter %>% group_by(year) %>% mutate(p50 = median(std_value,na.rm=TRUE),
                                                                     p25 = quantile(std_value,0.25,na.rm=TRUE),
                                                                     p75 = quantile(std_value,0.75,na.rm=TRUE))
    plot <- ggplot(data=data_filter_, aes(x=factor(year), y=std_value, group = year)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = "P25-P75 nacional"), alpha = 0.3) +
    geom_point(size=0.7, alpha = 0.3) +
    geom_line(aes(x=factor(year),y=p50,group =ccaa_st,color='P50 nacional')) + 
    labs(title = paste0(df_names_var_te_$title),
           subtitle = paste0(df_list_indicators_$descr, ' (',df_list_indicators_$indicators,')'),
        x = '',
        y = df_names_var_te_$title) +facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() + ylim(c(0,df_list_indicators_$limite_eje)) +
    scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) + 
      scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),plot.title.position = 'plot',axis.text.x = element_text(angle=90,size=10),
          legend.position = 'bottom')
    
    
    
    p[[ind]] <- plot
  }
  return(p)
}


plot_te <- lapply(list_variables, plot_te_violin_ccaa)

```

::: {.callout-tip}
## Descripción figura

Se muestra la evolución de la variación por CCAA del consumo (DHD) en las zonas básicas de salud que componen el sistema nacional de salud de manera que cada punto es una zona básica. La línea sólida roja es la mediana nacional y la zona sobreada gris es el rango intercuartílico, por lo que son comunes a todas las comunidades.
:::

::: {.panel-tabset} 

### Opioides (N02A)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDTotalCCAA
plot_te[[1]]$N02A


```


### Alcaloides naturales del opio (N02AA)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDAlcaloidesnaturalesdelopioCCAA
plot_te[[1]]$N02AA


```

### Derivados de fenilpiperidina (N02AB)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDDerivadosdefenilpiperidinaCCAA
plot_te[[1]]$N02AB
```

### Otros opioides (N02AX)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDOtrosopioidesCCAA
plot_te[[1]]$N02AX
```

### Opioides en combinación con analgésicos no opioides (N02AJ)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDOpioidesencombinaciónconanalgésicosnoopioidesCCAA
plot_te[[1]]$N02AJ
```

### Derivados de oripavina (N02AE)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: ConsumoDHDDerivadosdeoripavinaCCAA
plot_te[[1]]$N02AE
```

:::

## Variación geográfica de consumo (DHD) de opioides en el año 2022


```{r,warning=FALSE,output=FALSE,echo=FALSE}
mapa_zbs <- read_sf('ZBS_ESP_4258_nuts2.shp')
  
p <- list()
plot_mapa_ccaa <- function(var){
  
  #names_files <- list.files(path="../../outputs", pattern = pattern, full.names=TRUE)
 #for(file in names_files){
  for(ind in df_list_indicators$indicators){
    data <- df_dhd_pvp
    data_filter <- data %>% filter(variable %in% var, indicator %in% ind, year %in% 2022)
    df_names_var_te_ <- df_names_var_te %>% filter(variable %in% var)
    df_list_indicators_ <- df_list_indicators %>% filter(indicators %in% ind)
    data_filter <- left_join(data_filter,df_participantes_, by = 'ccaa_cd')
    
    data_filter <- left_join(mapa_zbs[c('codatzbs','geometry')],data_filter,by='codatzbs')
    data_filter <- data_filter %>% filter(!is.na(std_value))
    

    mapa_ <- data_filter %>% rename(te = std_value)
    mapa_ <- mapa_ %>% ungroup()
    
    mapa_$Quintil[mapa_$te <= quantile(mapa_$te, 0.2, na.rm=TRUE)] <- "#ffffd4"

    mapa_$Quintil[quantile(mapa_$te, 0.2, na.rm=TRUE) < mapa_$te &
               mapa_$te <= quantile(mapa_$te, 0.4, na.rm=TRUE)] <- "#fed98e"

    mapa_$Quintil[quantile(mapa_$te, 0.4, na.rm=TRUE) < mapa_$te &
               mapa_$te <= quantile(mapa_$te, 0.6, na.rm=TRUE)] <- "#fe9929"

    mapa_$Quintil[quantile(mapa_$te, 0.6, na.rm=TRUE) < mapa_$te &
               mapa_$te <= quantile(mapa_$te, 0.8, na.rm=TRUE)] <- "#d95f0e"

    mapa_$Quintil[quantile(mapa_$te, 0.8, na.rm=TRUE) < mapa_$te &
               mapa_$te <= quantile(mapa_$te, 1, na.rm=TRUE)] <- "#993404"

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)
plot <- tm_shape(mapa_)  + tm_fill('Quintil', title = "Quintil",
                                 palette = c('#ffffd4', '#fed98e', "#fe9929", "#d95f0e", '#993404'),legend.is.portrait = FALSE) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                          tm_add_legend(type = 'fill', labels = c(paste0("Q1 = (",
                          str_replace(as.character(round(quantile(mapa_$te, 0.0, na.rm=TRUE),2)),'\\.',','),'-',
                          str_replace(as.character(round(quantile(mapa_$te, 0.2, na.rm=TRUE),2)),'\\.',','),')'),
                          paste0("Q2 = (",str_replace(as.character(round(quantile(mapa_$te, 0.2, na.rm=TRUE),2)),'\\.',','),'-',
                                 str_replace(as.character(round(quantile(mapa_$te, 0.4, na.rm=TRUE),2)),'\\.',','),')'),
                          paste0("Q3 = (",str_replace(as.character(round(quantile(mapa_$te, 0.4, na.rm=TRUE),2)),'\\.',','),'-',
                                 str_replace(as.character(round(quantile(mapa_$te, 0.6, na.rm=TRUE),2)),'\\.',','),')'),
                          paste0("Q4 = (",str_replace(as.character(round(quantile(mapa_$te, 0.6, na.rm=TRUE),2)),'\\.',','),'-',
                                 str_replace(as.character(round(quantile(mapa_$te, 0.8, na.rm=TRUE),2)),'\\.',','),')'), 
                          paste0("Q5 = (",str_replace(as.character(round(quantile(mapa_$te, 0.8, na.rm=TRUE),2)),'\\.',','),'-',
                          str_replace(as.character(round(quantile(mapa_$te, 1.0, na.rm=TRUE),2)),'\\.',','),')')), 
                                        col = c('#ffffd4', '#fed98e', "#fe9929", "#d95f0e", '#993404')) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")
    
#     plot <- data_filter %>%
#               tm_shape() +
#               tm_fill(title = paste0(df_names_var_te_$title),
#            subtitle = paste0(df_list_indicators_$descr, ' (',df_list_indicators_$indicators,')'),col = "std_value", style = "quantile",
#                           palette = c('#ffffd4', '#fed98e', '#fe9929', '#d95f0e', '#993404'),
#                           legend.format = list(text.separator='-')) +
#               tm_borders("gray70", lwd = 0.0) +
#       tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
# # tm_borders('#6e0c05', lwd = 1.2) +
#               tm_layout(legend.outside = FALSE,legend.show = TRUE,
#               legend.position = c("right", "bottom"), inner.margins = c(0.01, 0.01, .12, .25),
#               panel.label.bg.color = "white")
#   
  p[[ind]] <- plot   
  }
  return(p)
}


plot_te <- lapply(list_variables, plot_mapa_ccaa)
```

::: {.callout-tip}
## Descripción figura

Se muestra la variación geográfica mediante mapas por CCAA del consumo (DHD) en las zonas básicas de salud que componen el sistema nacional de salud para el último año disponible. La figura está coloreada por quintiles calculados a nivel nacional.
:::

::: {.panel-tabset} 
### Opioides (N02A)

```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=7}
#| label: ConsumoDHDTotalCCAAmapa
plot_te[[1]]$N02A


```


### Alcaloides naturales del opio (N02AA)

```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=7}
#| label: ConsumoDHDAlcaloidesnaturalesdelopioCCAAmapa
plot_te[[1]]$N02AA


```

### Derivados de fenilpiperidina (N02AB)

```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=7}
#| label: ConsumoDHDDerivadosdefenilpiperidinaCCAAmapa
plot_te[[1]]$N02AB
```

### Otros opioides (N02AX)

```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=7}
#| label: ConsumoDHDOtrosopioidesCCAAmapa
plot_te[[1]]$N02AX
```

### Opioides en combinación con analgésicos no opioides (N02AJ)

```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=7}
#| label: ConsumoDHDOpioidesencombinaciónconanalgésicosnoopioidesCCAAmapa
plot_te[[1]]$N02AJ
```

### Derivados de oripavina (N02AE)

```{r,warning=FALSE,echo=FALSE,fig.width=12, fig.height=7}
#| label: ConsumoDHDDerivadosdeoripavinaCCAAmapa
plot_te[[1]]$N02AE
```


:::

## Evolución de la variación por ZBS de los indicadores de utilización de analgésicos opioides



```{r,warning=FALSE,output=FALSE,echo=FALSE}


con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

# data_new_ind <- dbGetQuery(conn = con, "
# SELECT * FROM(SELECT
# atc_farmaco_dispensado,
# año_cd,
# ccaa_cd,
# zbs_residencia_cd,
# sum(n_envases) as sum_n_envases
# FROM
#  main.aggregated_outputs
# GROUP BY
# atc_farmaco_dispensado,
# año_cd,
# ccaa_cd,
# zbs_residencia_cd) WHERE año_cd >= 2017
# 	")

## Para eliminar baleares 2021 datos con grupo_edad 1,2,3
data_new_ind <- dbGetQuery(conn = con, "
SELECT
atc_farmaco_dispensado,
año_cd,
ccaa_cd,
zbs_residencia_cd,
sum(sum_n_envases) as sum_n_envases
FROM(SELECT
atc_farmaco_dispensado,
año_cd,
ccaa_cd,
zbs_residencia_cd,
sum(n_envases) as sum_n_envases
FROM
 main.aggregated_outputs WHERE grupo_edad_cd IN (4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)
GROUP BY
atc_farmaco_dispensado,
año_cd,
ccaa_cd,
grupo_edad_cd,
zbs_residencia_cd) WHERE año_cd >= 2017
GROUP BY
atc_farmaco_dispensado,
año_cd,
ccaa_cd,
zbs_residencia_cd
	")

dbDisconnect(con, shutdown=TRUE)

data_new_ind <- data_new_ind %>% filter(!is.na(zbs_residencia_cd))

```


::: {.callout-tip}
## Descripción figura

Se muestra la evolución de la variación por CCAA del porcentaje de envases dispensados en las zonas básicas de salud que componen el sistema nacional de salud de manera que cada punto es una zona básica. La línea sólida roja es la mediana nacional y la zona sobreada gris es el rango intercuartílico, por lo que son comunes a todas las comunidades. 
:::

:::{.panel-tabset} 

### % Morfina

```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AA01')) %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)



data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                      p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                      p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                      p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                      p95 = quantile(percent,0.95,na.rm=TRUE))

data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')


plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de morfina (N02AA01) respecto al total de opioides (N02A)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: morfina
plot
```

### % Fentanilo


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AB03')) %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)



data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))

data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de fentanilo (N02AB03) respecto al total de opioides (N02A)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: fentanilo
plot
```



### % Codeína


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AJ06|N02AJ07|N02AJ08')) %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)



data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))

data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de codeína (sólo o en combinación) (N02AJ06, N02AJ07, N02AJ08) respecto al total de opioides (N02A)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: codeina
plot
```


### % Oxicodona

```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AA05|N02AA55')) %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)
data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))


data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de oxicodona (sólo o en combinación) (N02AA05, N02AA55) respecto al total de opioides (N02A)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: oxicodona
plot
```




### % Tramadol

```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AX02|N02AJ13')) %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)


data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))


data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de tramadol (sólo o en combinación) (N02AX02, N02AJ13) respecto al total de opioides (N02A)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: tramadol
plot
```


### % Tapentadol


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AX06')) %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)
data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)




data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))

data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de tapentadol (sólo o en combinación) (N02AX06) respecto al total de opioides (N02A)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: tapentadol
plot
```



### % Oxicodona en combinación


```{r,warning=FALSE,output=FALSE,echo=FALSE}



data_new_ind_ <- data_new_ind %>% filter(atc_farmaco_dispensado %in% c('N02AA05','N02AA55'))

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(atc_farmaco_dispensado %in% 'N02AA55') %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)
data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)


data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))


data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill='P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de oxicodona en combinación (N02AA55) respecto al total de oxicodona dispensada (N02AA05 + N02AA55)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: oxicodona_combi
plot
```



### % Tramadol en combinación


```{r,warning=FALSE,output=FALSE,echo=FALSE}



data_new_ind_ <- data_new_ind %>% filter(atc_farmaco_dispensado %in% c('N02AJ13','N02AX02'))

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,zbs_residencia_cd) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(atc_farmaco_dispensado %in% 'N02AJ13') %>% 
group_by(año_cd,ccaa_cd,zbs_residencia_cd,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd) %>% mutate(p50 = median(percent,na.rm=TRUE),
                                                                     p25 = quantile(percent,0.25,na.rm=TRUE),
                                                                     p75 = quantile(percent,0.75,na.rm=TRUE),
                                                                     p05 = quantile(percent,0.05,na.rm=TRUE),
                                                                     p95 = quantile(percent,0.95,na.rm=TRUE))


data_new_ind_ <- left_join(data_new_ind_,df_participantes_, by = 'ccaa_cd')
#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')

plot <- ggplot(data=data_new_ind_,aes(x=factor(año_cd), y=percent, group = año_cd)) +
    geom_ribbon(aes(ymin = p25, ymax = p75,group =ccaa_st,fill = 'P25-P75 nacional'), alpha = 0.3) +
    #geom_point(aes(color=color_point),size=0.7,alpha = 0.3) +
    geom_point(size=0.7,alpha = 0.3) +
    geom_line(aes(x=factor(año_cd),y=p50,group =ccaa_st,color='P50 nacional')) +
    labs(title= 'Porcentaje de tramadol en combinación (N02AJ13) respecto al total de tramadol dispensado (N02AJ13 + N02AX02)',
         x = '',
         y='Porcentaje (%)')+facet_wrap(~ccaa_st,ncol = 4) +
    theme_minimal() +
    # scale_color_manual(name = "",values = c(
    # 'P50 nacional' = 'firebrick','Porcentaje < P05' = 'red', 'Porcentaje >= P05' = 'black')) +
      scale_color_manual(name = "",values = c(
    'P50 nacional' = 'firebrick')) +
  scale_fill_manual(name="",values=c('P25-P75 nacional'='grey70')) +
      scale_x_discrete(breaks=seq(2017, 2022, by = 1))+
    theme(plot.title = element_text(size=10),axis.text.x = element_text(angle=90,size=10),legend.position = 'bottom',
          plot.title.position = 'plot')




```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: tramadol_combi
plot
```


:::



## Variación geográfica por ZBS de los indicadores de utilización de analgésicos opioides en el año 2022

<!-- @SANTI: 
ESTO SE PUEDE DIVIDIR EN DOS SECCIONES SEGÚN LA LÓGICA DEL INDICADOR PARA QUE TE RESULTE MÁS FÁCIL PROGRAMA UNA FUNCIÓN CON CADA LÓGICA
- ACORTAR NOMBRE INDICADORES '% MORFINA, % FENTANILO', '% TRAMADOL', ETC. 
- REVISAR LÓGICAS -->

<!-- PUNTOS (ZBS), FACET(CCAA)
IDEAS: 
- EJE Y (AÑO), EJE X (DHD), FACET(CCAA)
- AÑADIR MEDIANA GENERAL (FIREBRICK SOLID) ANOTADA
- AÑADIR P5-P95 RIBBON GREY709
- AÑADIR ALPHA 0.3 A LOS PUNTOS
- CAMBIAR COLOR PUNTO SI ESTÁ POR FUERA DE P5-P95 SEGÚN LÓGICA INDICADOR
- USAR UN THEME_VOID() o quitar todo lo que no sea necesario
--> 


```{r,warning=FALSE,output=FALSE,echo=FALSE}


con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)


data_new_ind <- dbGetQuery(conn = con, "
SELECT 
		atc_farmaco_dispensado,
		año_cd,
		ccaa_cd,
		codatzbs,
		sum(sum_n_envases) as sum_n_envases
FROM
	(
	SELECT
		a.*,
		b.codatzbs
	FROM
		(
		SELECT
			atc_farmaco_dispensado,
			año_cd,
			ccaa_cd,
			zbs_residencia_cd,
			sum(n_envases) as sum_n_envases
		FROM
			main.aggregated_outputs
		WHERE
			año_cd == 2022
		GROUP BY
			atc_farmaco_dispensado,
			año_cd,
			ccaa_cd,
			zbs_residencia_cd) a
	LEFT JOIN main.zbs_residencia_codatzbs b 
ON
		a.ccaa_cd = b.ccaa_cd
		and a.zbs_residencia_cd = b.zbs_residencia_cd)
GROUP BY
	atc_farmaco_dispensado,
		año_cd,
		ccaa_cd,
		codatzbs")

dbDisconnect(con, shutdown=TRUE)



```


::: {.callout-tip}
## Descripción figura

Se muestra la variación geográfica mediante mapas por CCAA del porcentaje de envases dispensados en las zonas básicas de salud que componen el sistema nacional de salud para el último año disponible. Las ZBS están coloreadas por deciles.
:::

:::{.panel-tabset} 

### % Morfina


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AA01')) %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)
decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de morfina (N02AA01) respecto al total de opioides (N02A)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```



### % Fentanilo


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AB03')) %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de fentanilo (N02AB03) respecto al total de opioides (N02A)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```





### % Codeína

```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AJ06|N02AJ07|N02AJ08')) %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de codeína (sólo o en combinación) (N02AJ06, N02AJ07, N02AJ08) respecto al total de opioides (N02A)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```




### % Oxicodona


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AA05|N02AA55')) %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de oxicodona (sólo o en combinación) (N02AA05, N02AA55) respecto al total de opioides (N02A)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```



### % Tramadol


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AX02|N02AJ13')) %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de tramadol (sólo o en combinación) (N02AX02, N02AJ13) respecto al total de opioides (N02A)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```


### % Tapentadol


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(str_starts(atc_farmaco_dispensado,'N02AX06')) %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de tapentadol (sólo o en combinación) (N02AX06) respecto al total de opiodes (N02A)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```




### % Oxicodona en combinación


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind %>% filter(atc_farmaco_dispensado %in% c('N02AA05','N02AA55'))

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(atc_farmaco_dispensado %in% 'N02AA55') %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de oxicodona en combinación (N02AA55) respecto al total de oxicodona dispensada (N02AA05 + N02AA55)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```



### % Tramadol en combinación


```{r,warning=FALSE,output=FALSE,echo=FALSE}

data_new_ind_ <- data_new_ind %>% filter(atc_farmaco_dispensado %in% c('N02AJ13','N02AX02'))

data_new_ind_ <- data_new_ind_ %>% group_by(año_cd,ccaa_cd,codatzbs) %>% mutate(total = sum(sum_n_envases,na.rm=TRUE))

data_new_ind_ <- data_new_ind_ %>% filter(atc_farmaco_dispensado %in% 'N02AJ13') %>% 
group_by(año_cd,ccaa_cd,codatzbs,total) %>% summarise(percent = (sum(sum_n_envases,na.rm=TRUE))) 
data_new_ind_$percent <- round((100*(data_new_ind_$percent/data_new_ind_$total)),2)

data_new_ind_ <- data_new_ind_ %>% dplyr::select(!total)

mapa_zbs_ <- mapa_zbs %>% filter(ccaa_cd %in% unique(df_participantes_$ccaa_cd))

data_filter <- left_join(mapa_zbs_[c('codatzbs','geometry','ccaa_cd')],data_new_ind_,by=c('codatzbs','ccaa_cd'))
data_filter$percent[is.na(data_filter$percent)] <- 0

#data_new_ind_$color_point <- ifelse(data_new_ind_$percent<data_new_ind_$p05,'Porcentaje < P05','Porcentaje >= P05')
mapa_ <- data_filter 
mapa_ <- mapa_ %>% ungroup()
mapa_ <- left_join(mapa_,df_participantes_, by = 'ccaa_cd')

tmap::tmap_options(check.and.fix = TRUE)

sf_use_s2(FALSE)

decil <- c(0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1)
bperc <- quantile(mapa_$percent,decil)
plot <- tm_shape(mapa_)  + tm_fill('percent', title = "Deciles",
                                 palette = '-plasma',
                                 legend.is.portrait = FALSE,breaks=bperc,
                                 labels=c(paste0("D1 = (", round(bperc[1], 2), " - ", round(bperc[2], 2),')'),
                                          paste0("D2 = (", round(bperc[2], 2), " - ", round(bperc[3], 2),')'),
                                          paste0("D3 = (", round(bperc[3], 2), " - ", round(bperc[4], 2),')'),
                                          paste0("D4 = (", round(bperc[4], 2), " - ", round(bperc[5], 2),')'),
                                          paste0("D5 = (", round(bperc[5], 2), " - ", round(bperc[6], 2),')'),
                                          paste0("D6 = (", round(bperc[6], 2), " - ", round(bperc[7], 2),')'),
                                          paste0("D7 = (", round(bperc[7], 2), " - ", round(bperc[8], 2),')'),
                                          paste0("D8 = (", round(bperc[8], 2), " - ", round(bperc[9], 2),')'),
                                          paste0("D9 = (", round(bperc[9], 2), " - ", round(bperc[10], 2),')'),
                                          paste0("D10 = (", round(bperc[10], 2), " - ", round(bperc[11], 2),')')),
                                 legend.format = list(text.separator='-')) +
                        tm_borders("gray50", alpha = 0.8, lwd = 0.0) +
                                tm_facets(by = "ccaa_st", free.scales = TRUE,showNA = FALSE) +
                        # tm_borders('#6e0c05', lwd = 1.2) +
              tm_layout(title='Porcentaje de tramadol en combinación (N02AJ13) respecto al total de tramadol dispensado (N02AJ13 + N02AX02)',title.position =  c("LEFT", "TOP"),
title.size = 0.95,legend.outside = TRUE,legend.show = TRUE,
              legend.outside.position = c('bottom'),outer.margins = c(-0.175,0,0,0),
              panel.label.bg.color = "white")


```


```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
plot
```




:::


## Comparación de la variación de gasto (PVP) frente a variación de consumo (DHD)
<!-- SCATTER PLOT EJE Y PVP VS EJE X DHD, COLOR+GROUP CCAA, GEOM_SMOOTH(METHOD="LM"), PARA TODA LA SERIE
IDEAS: 
- SCALE_COLOR_HUE GRISES 
- ELIMINAR LEYENDAS
- ANOTAR PENDIENTES 'SMOOTH' CON NOMBRE COMUNIDADES
- CAMBIAR COLOR EN FUNCIÓN DE DISTANCIA RESPECTO A LA DIAGONAL
-->



```{r}
#| label: funcion para plotear pvp_dhd

data <- df_dhd_pvp %>% 
  dplyr::select(codatzbs,n_zbs,indicator,variable,ccaa_cd,std_value,year)
lista_indicadores <- unique(df_list_indicators$indicators)
p <- list()
plot_te_pvp_dhd <- function(ind){

    data_filter <- data %>% filter(indicator %in% ind) %>% 
      pivot_wider(names_from = variable,values_from = std_value)
    data_filter <- left_join(data_filter,df_participantes_, by = 'ccaa_cd')
    df_list_indicators_ <- df_list_indicators %>% filter(indicators %in% ind)
    data_filter <- data_filter %>% ungroup()
    plot <- ggplot(data=data_filter, aes(x=dhd, y=pvp,color = ccaa_st,group=ccaa_st,text = paste("ZBS:", n_zbs))) +
      geom_smooth(method = 'lm',se=FALSE) +
      geom_point(alpha=0.1,size=0.1) +
      scale_color_hue() +
      labs(title = paste0('Gasto PVP frente consumo (DHD)'),
           subtitle = paste0(df_list_indicators_$descr, ' (',df_list_indicators_$indicators,')'),
           x = 'Consumo (DHD) mg por mil habitantes',
           y = 'Gasto (PVP) € por habitante',
           color = 'CCAA') +
      theme_minimal_hgrid(font_size = 12) 
    plot <- ggplotly(plot, tooltip = 'text')
    p[[ind]] <- plot
  return(p)
}


plot_te <- lapply(lista_indicadores, plot_te_pvp_dhd)
rm(data)
```


::: {.callout-tip}
## Descripción figura

Se muestra el gasto PVP frente al consumo (DHD) donde para cada comunidad autónoma se calcula una regresión lineal en función de los valores calculados para cada ZBS para toda la serie temporal.
:::

::: {.panel-tabset} 


### Opioides (N02A)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo DHD Total CCAA vs PVP
plot_te[[1]]$N02A


```


### Alcaloides naturales del opio (N02AA)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo DHD Alcaloides naturales del opio CCAA vs PVP
plot_te[[2]]$N02AA


```

### Derivados de fenilpiperidina (N02AB)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo DHD Derivados de fenilpiperidina CCAA vs PVP
plot_te[[3]]$N02AB
```

### Otros opioides (N02AX)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo DHD Otros opioides CCAA vs PVP
plot_te[[4]]$N02AX
```

### Opioides en combinación con analgésicos no opioides (N02AJ)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo DHD Opioides en combinación con analgésicos no opioides CCAA vs PVP
plot_te[[5]]$N02AJ
```

### Derivados de oripavina (N02AE)

```{r,warning=FALSE,echo=FALSE,fig.width=10, fig.height=9}
#| label: Consumo DHD Derivados de oripavina CCAA vs PVP
plot_te[[6]]$N02AE
```


:::


# Notas metodológicas
## Sobre los resultados analizados

::: {.justify}

Este informe se centra en el cálculo de las tasas estandarizadas para cada subgrupo terapéutico tomando como referencia la población española (población INE), por sexo y grupo quinquenal de edad, para cada año del periodo de estudio. 
Este informe restringe el periodo de estudio desde el 01 de enero de 2017 al 31 de diciembre de 2022. 
Los indicadores de consumo de medicamentos están calculados como Dosis por mil Habitantes Día (DHD), o como gasto (€) por habitante, utilizando como referencia la Dosis Diaria Definida (DDD) por envase de cada medicamento o el Precio de Venta al Público (PVP) disponibles en el [nomenclator de facturación de farmacia del Ministerio de Sanidad](https://www.sanidad.gob.es/profesionales/nomenclator.do) (descargado en Junio 2022) respectivamente. 

- El número de envases dispensados por habitante se calcula como el $$\sum(envases_{ATC, ZBS})/población_{ZBS, sexo, grupo edad}$$ 
- Dosis por mil Habitantes Día (DHD) se calcula como el $$((\sum(DDD_{ATC}) * 1000_{habitantes})/ (población_{ZBS, sexo, grupo edad} * 365_{días}))$$
- El gasto (€) por habitante se calcula como $$Gasto = \sum(PVP)/(población_{ZBS, sexo, grupo edad})$$

:::

## Sobre la unidad de análisis

::: {.justify}

La unidad de análisis en este informe son las zonas básicas de salud (ZBS) de referencia según la residencia de los pacientes dispensados.

:::

## Sobre los indicadores {#sec-indicadores}

::: {.justify}

Los indicadores estudiados se corresponden con subgrupos de opioides en función de su código ATC (5 dígitos), además de aquellos otros indicadores considerados relevantes para estudio por las comunidades autónomas participantes en este proyecto. 

- Opioides (*N02A*),

- Subgrupo terapéutico:

  - Alcaloides naturales del opio (*N02AA*)
  
  - Derivados de fenilpiperidina (*N02AB*)
  
  - Otros opioides (*N02AX*)
  
  - Opioides en combinación con analgésicos no opioides (*N02AJ*)
  
  - Derivados de oripavina (*N02AE*)
  
- Indicadores de utilización de analgésicos opioides:

  - Porcentaje de morfina (*N02AA01*) respecto al total de opioides (*N02A*)
  
  - Porcentaje de fentanilo (*N02AB03*) respecto al total de opioides (*N02A*)
  
  - Porcentaje de codeína (sólo o en combinación) (*N02AJ06*, *N02AJ07*, *N02AJ08*) respecto al total de opioides (*N02A*)
  
  - Porcentaje de oxicodona (sólo o en combinación) (*N02AA05*, *N02AA55*) respecto al total de opioides (*N02A*)
  
  - Porcentaje de tramadol (sólo o en combinación) (*N02AX02*, *N02AJ13*) respecto al total de opioides (*N02A*)
  
  - Porcentaje de tapentadol (sólo o en combinación) (*N02AX06*) respecto al total de opiodes (*N02A*)
  
  - Porcentaje de oxicodona en combinación (*N02AA55*) respecto al total de oxicodona dispensada (*N02AA05* + *N02AA55*)
  
  - Porcentaje de tramadol en combinación (*N02AJ13*) respecto al total de tramadol dispensado (*N02AJ13* + *N02AX02*)


A continuación se muestra el listado de códigos de ATC que aparecen en los datos de entrada:

```{r}

con <- dbConnect(duckdb::duckdb(), dbdir=database_path, read_only=FALSE)

tabla_atc <- dbGetQuery(conn=con,
  "
	select
		atc_farmaco_dispensado,
	  sum(n_envases) as sum_n_envases
	from
		main.aggregated_outputs
	group by atc_farmaco_dispensado
")

dbDisconnect(con, shutdown=TRUE)

```


```{mermaid}
flowchart TD
    A[N02A] -->B[N02AA]
    A -->C[N02AB]
    A -->D[N02AX]
    A -->E[N02AJ]
    A -->F[N02AE]
    A -->L[Otros]
    B -->G[N02AA01\nN02AA03\nN02AA05\nN02AA55]
    C -->H[N02AB02\nN02AB03]
    D -->I[N02AX02\nN02AX06]
    E -->J[N02AJ06\nN02AJ07\nN02AJ08\nN02AJ13\nN02AJ14]
    F -->K[N02AE01]
    L -->M[N02AD01]
```



:::

## Fuente de datos

::: {.justify}

Los registros de los envases dispensados han sido extraídos de acuerdo al modelo común de datos del Atlas de Farmacia a partir de la base de datos de dispensaciones (i.e., receta electrónica) o base de datos de facturación de farmacia (i.e., cinta de facturación de farmacia) de las CCAA participantes. Puede consultar el modelo común de datos en el [repositorio del proyecto](https://github.com/cienciadedatosysalud/atlas-farmacia). 

:::


## Sobre el numerador 

::: {.justify}

Para el cálculo de los indicadores se utilizaron todos los envases dispensados de forma ambulatoria en oficina de farmacia de aquellos fármacos cuyo ATC se consideró relevante (i.e., opioides (_N02A_)) a pacientes con una tarjeta sanitaria activa en el momento de la dispensación independientemente de la necesidad de visado y de la patología o condición para la que fueran dispensados. 
Estos ATC no incluyen todos los opioides sino sólo aquellos seleccionados como relevantes para estudio. 

```{r,message=FALSE,warning=FALSE, error=FALSE}
#| label: numerador
df_numerador <- data.frame(ccaa_st = c('Aragón','Principado de Asturias','Islas Baleares','Cantabria','Cataluña','Canarias','Castilla y León',
                                     'Comunidad Valenciana','Comunidad de Madrid','Comunidad Foral de Navarra','País Vasco','La Rioja','Región de Murcia'),
                         ccaa_cd = c('ES24','ES12','ES53','ES13','ES51','ES70','ES41','ES52','ES30','ES22','ES21','ES23','ES62'),
                         numerador = c('Población residente en la CCAA y asignada a ZBS que tenga al menos una dispensación durante el periodo de estudio','Población residente asignada a ZBS con al menos una dispensación', 'Cualquier persona con tarjeta sanitaria que recibe una dispensación en la CCAA independientemente de que esté adscrita a una ZBS de otra CCAA (i.e., interoperabilidad SNS)','Persona con tarjeta sanitaria CCAA con CIPAUT adscrita a una ZBS de la CCAA (independientemente si es HABITUAL, DESPLAZADO o RESIDENTE)', 'Población residente asignada a ZBS con al menos una dispensación', 'Población residente asignada a ZBS con al menos una dispensación', 'Solo se incluyen recetas de pacientes de Castilla y León (tanto dentro como fuera de la CCAA si están prescritas en la CCAA)', 'Población residente asignada a ZBS con al menos una dispensación', 'Población residente asignada a ZBS con al menos una dispensación', 'Residentes en la CCAA adscritas a la ZBS (independientemente del profesional del SNS-O que la realiza)', 'Población TIS con tarjeta sanitaria adscrita a un ZBS de la CCAA','Sólo residentes en la CCAA con tarjeta sanitaria adscrita a una ZBS de la CCAA','Población residente asignada a ZBS con al menos una dispensación'),
                         fuente = c('Receta electrónica','Receta electrónica', 'Facturación farmacia ambulatoria','Facturación farmacia ambulatoria', 'Receta electrónica', 'Receta electrónica', 'Facturación farmacia ambulatoria', 'Receta electrónica', 'Receta electrónica', 'Receta electrónica', 'Receta electrónica','Receta electrónica','Receta electrónica'),
                         Logo = c('aragon.png','asturias.png','baleares.png','cantabria.png','cataluña.png','canarias.png','castilla_leon.png',
                                   'valencia.png','madrid.png','navarra.png','pais_vasco.png','rioja.png','murcia.png'))

df_numerador_ <- df_numerador %>% filter(ccaa_cd %in% df_participantes_$ccaa_cd) %>%
  dplyr::select(!Logo)

# df_numerador_ <- df_numerador %>% 
#   dplyr::select(!Logo)

dplyr::tibble(
  CCAA = df_numerador_$ccaa_st,
  Numerador = df_numerador_$numerador,
  `Fuente de información` = df_numerador_$fuente) %>% 
  gt() %>% 
  tab_options(data_row.padding = px(1)) %>% 
  opt_table_lines(extent = c("none"))
```


:::

## Sobre el denominador

::: {.justify}

Los envases dispensados se asignan a la ZBS relativa al área de residencia del paciente. De esta manera, el análisis realizado compara el consumo farmacéutico o la exposición de las poblaciones a estos fármacos según su lugar de residencia. La población utilizada en la estandarización y cálculo de los denominadores de los indicadores procede de la actualización anual de población con tarjeta sanitaria del conjunto de todas las CCAA durante el periodo de estudio.

:::

## Sobre la metodología de análisis

::: {.justify}

Este informe se basa en la compilación y meta-análisis de resultados agregados generados por cada CCAA participante de forma federada, mediante la ejecución de análisis locales reproducibles. Este informe es el primer AtlasVPM realizado de forma federada. 
Las CCAA han participado en este AtlasVPM desplegando un entorno analítico reproducible (i.e., contendor Docker) conteniendo los análisis estadísticos locales para la generación de resultados agregados y compartiendo estos resultados con el grupo de Ciencia de Datos para la Investigación en Servicios y Políticas de Salud en el Instituto Aragonés de Ciencias de la Salud (IACS).  


:::


# Contribuciones

::: {.justify}

```{r,message=FALSE,warning=FALSE, error=FALSE}
#| label: autores
df_autores <- data.frame(ccaa_st = c('Aragón','Principado de Asturias','Islas Baleares','Cantabria','Cataluña','Canarias','Castilla y León',
                                     'Comunidad Valenciana','Comunidad de Madrid','Comunidad Foral de Navarra','País Vasco','La Rioja',
                                     'Región de Murcia'),
                         ccaa_cd = c('ES24','ES12','ES53','ES13','ES51','ES70','ES41','ES52','ES30','ES22','ES21','ES23','ES62'),
                         autores_st = c('Francisco Estupiñán Romero, Javier González Galindo, Santiago Royo Sierra, Natalia Martínez Lizaga, Miriam Seral Rodríguez, Ramón Launa Garcés, Ester Angulo Pueyo, Manolo Ridao López, Enrique Bernal Delgado','Gracia M Modroño Riaño', 'Eusebi Castaño Riera, María Zaforteza Dezcallar, María Vega Martín Martín','María Ángeles Lumbreras, Flora Pérez Hernández, Óscar Valcuende Mantilla', 'Cristina Colls Guerra, Mireia Espallargues Carreras, Érica Martínez Solanas, Manuel Medina Peralta, Andrea Molina Nadal, Pere Carbonell Puigdollers, Montserrat Vicente Belis', 'Jose Miguel Rodríguez Lugo, Sara Trujillo Alemán', 'Alejandra García Ortíz, Judith Ceruelo Bermejo, Nieves Martín Sobrino, Juan Carlos Solsona Perea', 'Julia Calabuig', 'José Manuel Izquierdo Palomares, Ángel Luis Mataix Sanjuan, María Isabel del Cura González, Tamara Alonso Safont', 'Maite Almirantearena Legaz, Anabel Zaborras Aguado, Javier Gorricho Mendívil', 'Eduardo Millán Ortuondo, Ricardo Samper Ochotorena','Felix Rivera Sanz, Pilar Sáenz Ortiz, Jose María Rodríguez Corral','Carlos Arenas Díaz, Víctor Rausell, José Eduardo Calle Urra, Amaya Jimeno Almazán, Rafael Herrero Delicado, Mariana Tobaruela Soto, María Onteniente Candela'),
                         afiliacion_st = c('Instituto Aragonés de Ciencias de Salud', 'Unidad de Farmacia de Salud. Servicio de Salud del Principado de Asturias','Consejería de Salud y Consumo','Dirección General de Ordenación Sanitaria, Farmacia e Inspección','Agència de Qualitat i Avaluació Sanitàries de Catalunya (AQUAS). Servei Català de la Salut. Consorci Sanitari de Barcelona', 'Servicio de Evaluación de la Calidad Asistencial y Sistemas de Información de la Dirección General de Programas Asistenciales', 'Dirección Técnica de Farmacia. Gerencia Regional de Salud de Castilla y León', 'Conselleria de Sanitat','Gerencia Asistencial de Atención Primaria','Servicio Navarro de Salud - Osasunbidea (SNS-O)','Osakidetza','Rioja Salud','Servicio Murciano de Salud'),
                         Logo = c('aragon.png','asturias.png','baleares.png','cantabria.png','cataluña.png','canarias.png','castilla_leon.png',
                                   'valencia.png','madrid.png','navarra.png','pais_vasco.png','rioja.png','murcia.png'))

#df_autores_ <- df_autores %>% filter(ccaa_cd %in% df_participantes_$ccaa_cd)
df_autores_ <- df_autores
dplyr::tibble(
  Logo = df_autores_$Logo,
  CCAA = df_autores_$ccaa_st,
  Autores = df_autores_$autores_st,
  Afiliación = df_autores_$afiliacion_st) %>% 
  gt() %>% 
  gt_img_rows(columns = Logo, img_source = "local", height = 25) %>%
   cols_label(
    Logo = "",
    CCAA = "",
    Autores = "",
    Afiliación = ""
  ) %>% 
  tab_options(data_row.padding = px(1)) %>% 
  opt_table_lines(extent = c("none"))
```


:::

# Referencias

 - [Atlas de variaciones injustificadas de la práctica médica (Atlas VPM)](https://cienciadedatosysalud.org/)
 
 - [Repositorio GitHub *Atlas Farmacia* del grupo de Ciencia de datos para la investigación en servicios y políticas sanitarias](https://github.com/cienciadedatosysalud/atlas-farmacia)
 
  - [Red de Investigación en Cronicidad, Atención Primaria y Prevención y Promoción de la Salud (RICAPPS)](https://www.ricapps.es/)
 
 - [Plan de Optimización de la Utilización de Analgésicos Opioides (en dolor crónico no oncológico en el SNS)](https://www.sanidad.gob.es/areas/farmacia/publicaciones/planOptimizacion/unoAnalgesicosOpioides.htm)
